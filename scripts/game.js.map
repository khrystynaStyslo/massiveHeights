{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "src/index.js",
    "src/states/GameOver.js",
    "src/states/Play.js",
    "src/states/Preload.js",
    "src/states/StartGame.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",
    "import StartGame from 'states/StartGame';\nimport Preload from 'states/Preload';\nimport Play from 'states/Play';\nimport GameOver from 'states/GameOver';\n\nclass Game extends Phaser.Game {\n\n\tconstructor() {\n\t\tsuper(window.innerWidth, window.innerHeight, Phaser.AUTO, 'content', null);\n\t\tthis.state.add('Preload', Preload,false);\n\t\tthis.state.add('StartGame', StartGame,false);\n\t\tthis.state.add('Play', Play, false);\n\t\tthis.state.add('GameOver', GameOver, false);\n\t\tthis.state.start('Preload');\n\t}\n}\n\nnew Game();\n",
    "import Preload from './Preload';\r\n\r\nlet background,\r\n  playBtn,\r\n  soundGameOver,\r\n  gameOver;\r\n\r\nclass GameOver extends Preload {\r\n  create() {\r\n    background = this.add.sprite(0,0,'background');\r\n    gameOver = this.add.sprite(this.game.world.centerX - 232, this.game.world.centerY - 200,'timeOut');\r\n\r\n    playBtn = this.add.button(this.game.world.centerX - 184, this.game.world.centerY, 'btnPlay', startPlay, this, 2, 1, 0);\r\n\r\n    soundGameOver = this.add.audio('gameOver', 1, false);\r\n\r\n    this.time.events.add(Phaser.Timer.SECOND * 0.5, timeUp, this);\r\n  }\r\n}\r\n\r\nfunction timeUp() {\r\n  soundGameOver.play();\r\n}\r\n\r\nfunction startPlay() {\r\n  this.world.remove(gameOver);\r\n  this.world.remove(playBtn);\r\n  this.game.state.start('Play');\r\n}\r\n\r\nexport default GameOver;\r\n",
    "import Preload from './Preload';\r\n\r\nlet background,\r\n  soundBtn,\r\n  scoreIcon,\r\n  gems,\r\n  gem,\r\n  text,\r\n  BOARD_COLS,\r\n  BOARD_ROWS,\r\n  backgroundMusic,\r\n  killGemsSound,\r\n  selectedGem,\r\n  MARGIN_LEFT,\r\n  MARGIN_TOP,\r\n  selectedStartPos;\r\n\r\nvar tempShiftedGem = null,\r\n  GEM_SIZE = 70,\r\n  MATCH_MIN = 3;\r\n\r\nclass Play extends Preload {\r\n  create() {\r\n    this.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;\r\n    background = this.add.tileSprite(0,0, window.innerWidth, window.innerHeight,'background');\r\n\r\n    var scoreFont = { font: \"30px Fredoka One\", fill: \"#fff\", align: \"center\" };\r\n    scoreIcon = this.add.sprite(window.innerWidth - 220,0,'score');\r\n    scoreIcon.width = 200;\r\n    scoreIcon.height = 150;\r\n\r\n    text = this.add.text(window.innerWidth - 130,45,\"\",scoreFont);\r\n    text.score = 0;\r\n\r\n    soundBtn = this.add.button(window.innerWidth - 120,window.innerHeight - 120, 'btnSound', handleMusic, this, 2, 1, 0);\r\n    soundBtn.width = 100;\r\n    soundBtn.height = 100;\r\n\r\n    backgroundMusic = this.add.audio('backgroundSound', 1, true);\r\n    backgroundMusic.play();\r\n\r\n    killGemsSound = this.add.audio('killGems', 1, false);\r\n\r\n    this.time.events.add(Phaser.Timer.MINUTE * 3, gameOver, this);\r\n\r\n    MARGIN_LEFT = this.game.world.centerX - 280;\r\n    MARGIN_TOP = this.game.world.centerY - 240;\r\n\r\n    gems = this.add.group();\r\n    gems.x = MARGIN_LEFT;\r\n    gems.y = MARGIN_TOP;\r\n\r\n    this.time.events.add(100, createBoard, this);\r\n\r\n    selectedStartPos = {\r\n      x: MARGIN_LEFT,\r\n      y: MARGIN_TOP,\r\n    };\r\n\r\n    this.input.addMoveCallback(slideGem, this);\r\n  }\r\n\r\n  update() {\r\n    text.text=~~text.score;\r\n  }\r\n\r\n  render() {\r\n    this.game.debug.text(`You time: ${(this.game.time.events.duration / 60000).toFixed(1)} minutes`, 15, 30, '#646464', '20px Fredoka One');\r\n    this.game.debug.text(\"\",window.innerWidth - 155,45);\r\n  }\r\n\r\n}\r\n\r\nfunction handleMusic() {\r\n  backgroundMusic.mute = !backgroundMusic.mute;\r\n}\r\n\r\nfunction gameOver() {\r\n  backgroundMusic.pause();\r\n  this.game.state.start('GameOver');\r\n}\r\n\r\nfunction createBoard() {\r\n  BOARD_COLS = 7;\r\n  BOARD_ROWS = 7;\r\n\r\n  for (let i = 0; i < BOARD_COLS; i++)\r\n  {\r\n    for (let j = 0; j < BOARD_ROWS; j++)\r\n    {\r\n      gem = gems.create(i * GEM_SIZE, j * GEM_SIZE, \"gems\");\r\n      gem.name = 'gem' + i.toString() + 'x' + j.toString();\r\n      gem.inputEnabled = true;\r\n      gem.events.onInputDown.add(selectGem, this);\r\n      gem.events.onInputUp.add(releaseGem, this);\r\n      gem.frame = Math.floor(Math.random() * gem.animations.frameTotal);\r\n      setGemPos(gem, i, j);\r\n    }\r\n  }\r\n\r\n  removeGems();\r\n\r\n  this.time.events.add(200, dropGems, this);\r\n\r\n  selectedGem = null;\r\n  tempShiftedGem = null;\r\n}\r\n\r\nfunction releaseGem() {\r\n\r\n  if (tempShiftedGem === null) {\r\n    selectedGem = null;\r\n    return;\r\n  }\r\n\r\n  let canKill = getAndKillMatches(selectedGem);\r\n  canKill = getAndKillMatches(tempShiftedGem) ||  canKill;\r\n\r\n  if(!canKill) {\r\n    let gem = selectedGem;\r\n\r\n    if (gem.posX !== selectedStartPos.x || gem.posY !== selectedStartPos.y)\r\n    {\r\n      swapGemPosition(gem, tempShiftedGem, this);\r\n    }\r\n  }\r\n\r\n  removeGems();\r\n\r\n  this.time.events.add(200, dropGems, this);\r\n  this.time.events.add( 300, changeBoard, this);\r\n\r\n  selectedGem = null;\r\n  tempShiftedGem = null;\r\n\r\n}\r\n\r\nfunction slideGem(pointer) {\r\n\r\n  if (selectedGem && pointer.isDown) {\r\n\r\n    let cursorGemPosX = Math.floor((this.input.x - MARGIN_LEFT) / GEM_SIZE);\r\n    let cursorGemPosY = Math.floor((this.input.y - MARGIN_TOP) / GEM_SIZE);\r\n\r\n    if (!(cursorGemPosY > BOARD_ROWS - 1 || cursorGemPosY < 0) && !(cursorGemPosX > BOARD_COLS - 1 || cursorGemPosX < 0)) {\r\n\r\n      if (cursorGemPosX !== selectedGem.posX || cursorGemPosY !== selectedGem.posY) {\r\n\r\n        if (tempShiftedGem !== null) {\r\n          swapGemPosition(selectedGem, tempShiftedGem, this);\r\n        }\r\n\r\n        tempShiftedGem = getGem(cursorGemPosX, cursorGemPosY);\r\n\r\n        if (tempShiftedGem === selectedGem) {\r\n          tempShiftedGem = null;\r\n        } else {\r\n          swapGemPosition(selectedGem, tempShiftedGem, this);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction swapGemPosition(gem1, gem2, game) {\r\n  game.add.tween(gem1).to({x:gem2.posX * GEM_SIZE, y:gem2.posY * GEM_SIZE}, 200, Phaser.Easing.Linear.In, true);\r\n  game.add.tween(gem2).to({x:gem1.posX * GEM_SIZE, y:gem1.posY * GEM_SIZE}, 200, Phaser.Easing.Linear.In, true);\r\n\r\n  const tempPosX = gem1.posX;\r\n  const tempPosY = gem1.posY;\r\n\r\n  setGemPos(gem1, gem2.posX, gem2.posY);\r\n  setGemPos(gem2, tempPosX, tempPosY);\r\n}\r\n\r\nfunction getAndKillMatches(gem) {\r\n\r\n  if (gem === null) { return; }\r\n\r\n  let canKill = false;\r\n\r\n  const countUp = countSameColorGems(gem, 0, -1);\r\n  const countDown = countSameColorGems(gem, 0, 1);\r\n  const countLeft = countSameColorGems(gem, -1, 0);\r\n  const countRight = countSameColorGems(gem, 1, 0);\r\n\r\n  const countHoriz = countLeft + countRight + 1;\r\n  const countVert = countUp + countDown + 1;\r\n\r\n  if (countVert >= MATCH_MIN)\r\n  {\r\n    killGemRange(gem.posX, gem.posY - countUp, gem.posX, gem.posY + countDown);\r\n    addAmount(countVert > 4 ? 10 : countVert > 3 ? 5 : 3);\r\n    killGemsSound.play();\r\n    canKill = true;\r\n  }\r\n\r\n  if (countHoriz >= MATCH_MIN)\r\n  {\r\n    killGemRange(gem.posX - countLeft, gem.posY, gem.posX + countRight, gem.posY);\r\n    addAmount(countHoriz > 4 ? 10 : countHoriz > 3 ? 5 : 3);\r\n    killGemsSound.play();\r\n    canKill = true;\r\n  }\r\n\r\n  return canKill;\r\n}\r\n\r\nfunction countSameColorGems(startGem, moveX, moveY) {\r\n\r\n  var curX = startGem.posX + moveX;\r\n  var curY = startGem.posY + moveY;\r\n  var count = 0;\r\n\r\n  while (curX >= 0 && curY >= 0 && curX < BOARD_COLS && curY < BOARD_ROWS && getGemColor(getGem(curX, curY)) === getGemColor(startGem))\r\n  {\r\n    count++;\r\n    curX += moveX;\r\n    curY += moveY;\r\n  }\r\n\r\n  return count;\r\n\r\n}\r\n\r\nfunction killGemRange(fromX, fromY, toX, toY) {\r\n\r\n  fromX = Phaser.Math.clamp(fromX, 0, BOARD_COLS - 1);\r\n  fromY = Phaser.Math.clamp(fromY , 0, BOARD_ROWS - 1);\r\n  toX = Phaser.Math.clamp(toX, 0, BOARD_COLS - 1);\r\n  toY = Phaser.Math.clamp(toY, 0, BOARD_ROWS - 1);\r\n\r\n  for (let i = fromX; i <= toX; i++)\r\n  {\r\n    for (let j = fromY; j <= toY; j++)\r\n    {\r\n      let gem = getGem(i, j);\r\n      gem.kill();\r\n    }\r\n  }\r\n\r\n}\r\n\r\nfunction removeGems() {\r\n  gems.forEach(function(gem) {\r\n    if (!gem.alive) {\r\n      setGemPos(gem, -1,-1);\r\n    }\r\n  });\r\n}\r\n\r\nfunction changeBoard() {\r\n  for (let i = 0; i < BOARD_COLS; i++)\r\n  {\r\n    let gemsMissingFromCol = 0;\r\n\r\n    for (let j = BOARD_ROWS - 1; j >= 0; j--)\r\n    {\r\n      let gem = getGem(i, j);\r\n\r\n      if (gem === null)\r\n      {\r\n        gemsMissingFromCol++;\r\n        gem = gems.getFirstDead();\r\n        gem.reset(i * GEM_SIZE, -gemsMissingFromCol * GEM_SIZE);\r\n        gem.dirty = true;\r\n        gem.frame = Math.floor(Math.random() * gem.animations.frameTotal);\r\n        setGemPos(gem, i, j);\r\n        this.add.tween(gem).to({x:gem.posX * GEM_SIZE, y:gem.posY * GEM_SIZE}, 300, Phaser.Easing.Linear.In, true);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction dropGems() {\r\n  for (let i = 0; i < BOARD_COLS; i++)\r\n  {\r\n    let dropRowCount = 0;\r\n\r\n    for (let j = BOARD_ROWS - 1; j >= 0; j--)\r\n    {\r\n      let gem = getGem(i, j);\r\n\r\n      if (gem === null)\r\n      {\r\n        dropRowCount++;\r\n      }\r\n      else if (dropRowCount > 0)\r\n      {\r\n        gem.dirty = true;\r\n        setGemPos(gem, gem.posX, gem.posY + dropRowCount);\r\n        this.add.tween(gem).to({x:gem.posX * GEM_SIZE, y:gem.posY * GEM_SIZE}, 200, Phaser.Easing.Linear.In, true);\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\nfunction setGemPos(gem, posX, posY) {\r\n  gem.posX = posX;\r\n  gem.posY = posY;\r\n  gem.id = posX + posY * BOARD_COLS;\r\n}\r\n\r\nfunction getGemColor(gem) {\r\n  return gem.frame;\r\n}\r\n\r\nfunction getGem(posX, posY) {\r\n  return gems.iterate(\"id\", posX + posY * BOARD_COLS, Phaser.Group.RETURN_CHILD);\r\n}\r\n\r\nfunction selectGem(gem) {\r\n  selectedGem = gem;\r\n  selectedStartPos.x = gem.posX;\r\n  selectedStartPos.y = gem.posY;\r\n}\r\n\r\nfunction addAmount(amount){\r\n  text.score += amount;\r\n}\r\n\r\nexport default Play;\r\n",
    "class Preload extends Phaser.State {\r\n  preload() {\r\n    this.load.spritesheet('gems', 'assets/images/game/gem.png', 70,70);\r\n\r\n    this.load.image('timeOut', 'assets/images/timeup.png');\r\n    this.load.image('logo', 'assets/images/donuts_logo.png');\r\n    this.load.image('btnPlay', 'assets/images/btn-play.png');\r\n    this.load.image('background', 'assets/images/backgrounds/background.jpg');\r\n    this.load.image('btnSound', 'assets/images/btn-sfx.png');\r\n    this.load.image('score','assets/images/bg-score.png');\r\n\r\n    this.load.image('gem2', 'assets/images/game/gem-02.png');\r\n    this.load.image('gem3', 'assets/images/game/gem-03.png');\r\n    this.load.image('gem4', 'assets/images/game/gem-04.png');\r\n    this.load.image('gem5', 'assets/images/game/gem-05.png');\r\n    this.load.image('gem6', 'assets/images/game/gem-06.png');\r\n\r\n    this.load.audio('backgroundSound', 'assets/audio/background.mp3');\r\n    this.load.audio('gameOver', 'assets/audio/kill.mp3');\r\n    this.load.audio('killGems', 'assets/audio/select-3.mp3');\r\n  }\r\n\r\n  create() {\r\n    this.state.start('StartGame');\r\n  }\r\n}\r\n\r\nexport default Preload;\r\n",
    "import Preload from './Preload';\n\nlet logo,\n\tsoundBtn,\n\tbackground,\n\tbackgroundMusic,\n\tplayBtn;\n\nclass StartGame extends Preload {\n\n\tcreate() {\n\t\tlet center = { x: this.game.world.centerX, y: this.game.world.centerY };\n\n\t\tthis.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;\n\t\tbackground = this.add.tileSprite(0,0, window.innerWidth, window.innerHeight,'background');\n\n\t\tsoundBtn = this.add.button(window.innerWidth - 120,window.innerHeight - 120, 'btnSound', handleMusic, this, 2, 1, 0);\n\t\tsoundBtn.width = 100;\n\t\tsoundBtn.height = 100;\n\n\t\tbackgroundMusic = this.add.audio('backgroundSound', 1, true);\n\t\tbackgroundMusic.play();\n\n\t\tthis.physics.startSystem(Phaser.Physics.ARCADE);\n\n    logo = this.add.sprite(center.x - 302, 20, 'logo');\n\n\t\tplayBtn = this.add.button(center.x - 143, window.innerHeight - 250, 'btnPlay', startPlay, this, 2, 1, 0);\n\n\t}\n}\n\nfunction startPlay() {\n\tbackgroundMusic.pause();\n\tthis.world.remove(playBtn);\n\tthis.world.remove(logo);\n\tthis.game.state.start('Play');\n}\n\nfunction handleMusic() {\n\tbackgroundMusic.mute = !backgroundMusic.mute;\n}\n\nexport default StartGame;\n"
  ]
}